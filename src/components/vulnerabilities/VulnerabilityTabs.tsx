
import React from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Database } from "@/integrations/supabase/types";
import { VulnerabilityTable } from "./vulnerability/VulnerabilityTable";
import { Alert, AlertTitle, AlertDescription } from "@/components/ui/alert";
import { AlertCircle } from "lucide-react";

type Vulnerability = Database['public']['Tables']['vulnerabilities']['Row'];

interface VulnerabilityTabsProps {
  vulnerabilities: Vulnerability[];
  loading: boolean;
  getFilteredVulnerabilities: (severity: string) => Vulnerability[];
  formatTimeAgo: (dateString: string | null) => string;
}

export const VulnerabilityTabs: React.FC<VulnerabilityTabsProps> = ({
  vulnerabilities,
  loading,
  getFilteredVulnerabilities,
  formatTimeAgo
}) => {
  console.log("VulnerabilityTabs rendering with", vulnerabilities.length, "vulnerabilities");
  
  if (vulnerabilities.length === 0 && !loading) {
    return (
      <div className="flex flex-col items-center justify-center py-12">
        <div className="text-center">
          <h3 className="text-lg font-medium mb-2">No vulnerabilities found</h3>
          <p className="text-muted-foreground max-w-sm mx-auto text-sm">
            You have no vulnerabilities recorded yet. Add one using the button above.
          </p>
        </div>
      </div>
    );
  }
  
  return (
    <Tabs defaultValue="all" className="w-full">
      <div className="flex justify-between items-center p-4">
        <TabsList>
          <TabsTrigger value="all">All Issues</TabsTrigger>
          <TabsTrigger value="critical">Critical</TabsTrigger>
          <TabsTrigger value="medium">Medium</TabsTrigger>
          <TabsTrigger value="low">Low</TabsTrigger>
        </TabsList>
      </div>

      <Alert variant="destructive" className="mb-4 mx-4">
        <AlertCircle className="h-4 w-4" />
        <AlertTitle>Important Note</AlertTitle>
        <AlertDescription>
          Only "critical", "medium", and "low" are valid severity levels. The "high" severity level is not supported by the database.
        </AlertDescription>
      </Alert>
      
      <TabsContent value="all" className="mt-0">
        <Card>
          <CardContent className="p-0">
            <VulnerabilityTable
              vulnerabilities={vulnerabilities}
              loading={loading}
              formatTimeAgo={formatTimeAgo}
            />
          </CardContent>
        </Card>
      </TabsContent>
      
      {['critical', 'medium', 'low'].map(severity => (
        <TabsContent key={severity} value={severity} className="mt-0">
          <Card>
            <CardContent className="p-0">
              <VulnerabilityTable
                vulnerabilities={getFilteredVulnerabilities(severity)}
                loading={loading}
                formatTimeAgo={formatTimeAgo}
                customColumns={{
                  nameHeader: `${severity.charAt(0).toUpperCase() + severity.slice(1)} Vulnerabilities`,
                }}
              />
            </CardContent>
          </Card>
        </TabsContent>
      ))}
    </Tabs>
  );
};
