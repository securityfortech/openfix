
import React from "react";
import { UseFormReturn } from "react-hook-form";
import { z } from "zod";
import { Asset } from "@/types/asset";
import { TeamMember } from "@/types/team-member";
import TextInputField from "./fields/TextInputField";
import TextareaField from "./fields/TextareaField";
import SelectField from "./fields/SelectField";
import AssetSelectField from "./fields/AssetSelectField";
import TeamMemberSelectField from "./fields/TeamMemberSelectField";

// Import the schema from the main form
const formSchema = z.object({
  name: z.string().min(3, { message: "Name must be at least 3 characters" }),
  location: z.string().min(3, { message: "Location must be at least 3 characters" }),
  description: z.string().optional(),
  severity: z.enum(["critical", "medium", "low"]),
  asset_id: z.string(),
  assignee_id: z.string(),
});

type VulnerabilityFormValues = z.infer<typeof formSchema>;

interface VulnerabilityFormFieldsProps {
  form: UseFormReturn<VulnerabilityFormValues>;
  assets: Asset[];
  isLoadingAssets: boolean;
  teamMembers: TeamMember[];
  isLoadingTeamMembers: boolean;
}

const VulnerabilityFormFields: React.FC<VulnerabilityFormFieldsProps> = ({
  form,
  assets,
  isLoadingAssets,
  teamMembers,
  isLoadingTeamMembers,
}) => {
  const severityOptions = [
    { value: "critical", label: "Critical" },
    { value: "medium", label: "Medium" },
    { value: "low", label: "Low" },
  ];

  return (
    <>
      <TextInputField
        form={form}
        name="name"
        label="Vulnerability Name"
        placeholder="SQL Injection Vulnerability"
      />

      <TextInputField
        form={form}
        name="location"
        label="Location"
        placeholder="api/users endpoint"
      />

      <AssetSelectField
        form={form}
        assets={assets}
        isLoadingAssets={isLoadingAssets}
      />

      <TeamMemberSelectField
        form={form}
        teamMembers={teamMembers}
        isLoading={isLoadingTeamMembers}
      />

      <TextareaField
        form={form}
        name="description"
        label="Description"
        placeholder="Describe the vulnerability in detail"
      />

      <SelectField
        form={form}
        name="severity"
        label="Severity Level"
        placeholder="Select severity level"
        options={severityOptions}
      />
    </>
  );
};

export { VulnerabilityFormFields, formSchema };
export type { VulnerabilityFormValues };
